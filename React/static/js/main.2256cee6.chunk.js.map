{"version":3,"sources":["main.module.css","home.js","backdrop.js","table.js","result.js","adminpage.js","adminlogin.js","candidatelogin.js","vote.js","voter.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","home","props","className","classes","homehead","text","mybtn","onClick","adminlogin","candidatelogin","footer","backdrop","onclick","table","poll","name","map","st","result","lab","obj","vote","votes","console","log","data","labels","datasets","label","admin","state","email","username","password","create","candidates","candidatename","livepoles","servercandidates","updat","axios","get","then","res","setState","getresult","event","con","target","innerHTML","add","key","value","startpole","adminname","post","alert","setoff","this","back","mycan","adminbody","adminheader","admincontrols","createbtn","form","type","placeholder","onChange","onKeyDown","admincontent","Component","login","authenticated","signup","logging","response","signing","mypoles","mybtnl","mybtns","backgroundColor","admincontainer","adminpic","adminform","logbtn","style","voterlogin","candidatepic","p","resultt","cand","App","adminauth","voterauth","toggleBackdrop","ka","app","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2256cee6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminheader\":\"main_adminheader__2CpKM\",\"adminbody\":\"main_adminbody__1UVdV\",\"admincontrols\":\"main_admincontrols__24Wpf\",\"createbtn\":\"main_createbtn__1mvAf\",\"mycan\":\"main_mycan__U9OXU\",\"admincontent\":\"main_admincontent__XvgUu\",\"app\":\"main_app__3i50_\",\"backdrop\":\"main_backdrop__2jtXs\",\"admincontainer\":\"main_admincontainer__2cqTA\",\"logbtn\":\"main_logbtn__2__Uq\",\"form\":\"main_form__1Ou3F\",\"activebutton\":\"main_activebutton__3M-w3\",\"adminform\":\"main_adminform__2udtF\",\"adminpic\":\"main_adminpic__2pjcj\",\"candidatepic\":\"main_candidatepic__5tySr\",\"home\":\"main_home__2aiUa\",\"mybtn\":\"main_mybtn__3OWli\",\"homehead\":\"main_homehead__1EgRy\",\"text\":\"main_text__3IvNH\",\"footer\":\"main_footer__2FQb_\",\"result\":\"main_result__1xVsh\",\"resultt\":\"main_resultt__X-tQp\"};","import React from 'react';\r\nimport classes from './main.module.css';\r\nconst home=(props)=>{\r\n    return (\r\n        <div className={classes.home}>\r\n            <div className={classes.homehead}></div>\r\n            <div className={classes.text}>Polling Web Application</div>\r\n            <div className={classes.mybtn}>  <button onClick={props.adminlogin}><h3>Log in</h3><p>As Admin</p></button>\r\n                <button onClick={props.candidatelogin}><h3>Log in</h3><p>As Voter</p></button></div>\r\n            <div className={classes.footer}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default home;","import React from 'react';\r\nimport classes from './main.module.css'\r\n\r\nconst backdrop =(props)=>{\r\n    return  <div onClick={props.onclick} className={classes.backdrop}></div>\r\n}\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport './table.css'\r\n\r\nconst table =(props)=>{\r\n    let poll=props.name.map((st)=>{\r\n        return <tr onClick={props.onclick}><td>{st}</td></tr>\r\n    })\r\n   return <table>\r\n        {poll}\r\n        \r\n    </table>\r\n}\r\n\r\nexport default table;\r\n","import React from 'react'\r\nimport classes from './main.module.css'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\n\r\nconst result =(props)=>{\r\n    let lab=props.name.map((obj)=>{\r\n        return obj.name;\r\n    })\r\n\r\n    let vote=props.name.map((obj)=>{\r\n        return obj.votes;\r\n           \r\n    })\r\n    console.log(vote)\r\n   let data={\r\n        labels:lab,\r\n        datasets:[\r\n            {   \r\n                label:\"Number of Votes\",\r\n            data:[...vote]\r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={classes.result} ><Bar data={data}/></div>\r\n    )\r\n}\r\n\r\nexport default result;","import React, {Component} from 'react';\r\nimport classes from './main.module.css';\r\nimport Backdrop from './backdrop'\r\nimport T from './table'\r\nimport axios from 'axios';\r\nimport './table.css'\r\nimport Result from './result'\r\nclass admin extends Component{\r\n    state={\r\n        email:this.props.username,\r\n        password:\"\",\r\n        create:false,\r\n        name:\"\",\r\n        candidates:[],\r\n        candidatename:\"\",\r\n        livepoles:[],\r\n        label:\"\",\r\n        result:false,\r\n        servercandidates:[]\r\n    }\r\n    \r\n     componentDidMount(){ \r\n        this.setState({\r\n            email:this.props.username\r\n        })\r\n        axios.get(\"http://localhost:8081/getelection/\"+this.state.email).then((res)=>{\r\n            console.log(res.data)\r\n            this.setState({\r\n                livepoles:res.data.map((obj)=>{\r\n                    return obj.name;\r\n                    \r\n                }),\r\n               \r\n        })\r\n    })\r\n\r\n        \r\n}\r\nupdat=()=>{ \r\n        \r\n    axios.get(\"http://localhost:8081/getelection/\"+this.state.email).then((res)=>{\r\n        console.log(res.data)\r\n        this.setState({\r\n            livepoles:res.data.map((obj)=>{\r\n                return obj.name;\r\n                \r\n            }),\r\n           \r\n    })\r\n})\r\n\r\n    \r\n}\r\n\r\n    getresult=(event)=>{\r\n        let con=event.target.innerHTML\r\n        axios.get(\"http://localhost:8081/result/\"+event.target.innerHTML).then((res)=>{\r\n            console.log(res.data);\r\n            this.setState({\r\n                servercandidates:res.data,\r\n                result:true,\r\n                label:con\r\n            })\r\n        })\r\n        \r\n    }\r\n    add=(event)=>{\r\n        if(event.key==\"Enter\")\r\n           {\r\n                this.setState({\r\n                    candidates:[...this.state.candidates,\r\n                        event.target.value\r\n                    ],\r\n                    candidatename:\"\"\r\n                })\r\n            }\r\n        \r\n    }\r\n    \r\n    startpole=()=>{\r\n        {\r\n            \r\n            \r\n            let obj={\r\n                name:this.state.name,\r\n                adminname:this.state.email,\r\n                candidates:this.state.candidates\r\n            }\r\n            axios.post(\"http://localhost:8081/poll\",obj).then((res)=>{\r\n                this.setState({create:false})\r\n                if(res.data)\r\n                {this.updat();\r\n                alert(\"Poll Started Successfully!\")\r\n                }\r\n            })\r\n            this.setState({\r\n                candidates:[],\r\n                name:\"\"\r\n            })\r\n            \r\n        }\r\n    \r\n    \r\n        \r\n    }\r\n\r\n    setoff=()=>{\r\n        this.setState({\r\n            result:false\r\n        })\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        let res=null;\r\n        let back=null\r\n        if(this.state.result)\r\n          {  res=<Result label= {this.state.label}name={this.state.servercandidates}/>\r\n                back=<Backdrop onclick={this.setoff}/>\r\n        }   else{\r\n            back=null;\r\n            res=null;\r\n        }\r\n        let candidates=this.state.candidates.map((data)=>{\r\n            return (<p className={classes.mycan}> {data} </p>)\r\n        });\r\n        let poll=null\r\n        let ok\r\n      \r\n    poll= <T onclick={this.getresult} name={this.state.livepoles}></T>\r\n        \r\n        return(\r\n            <div className={classes.adminbody}>\r\n                    {res}\r\n                    {back}\r\n                 <div >\r\n                <div className={classes.adminheader}>Welcome, {this.state.email}</div>\r\n                <div className={classes.admincontrols}><button className={classes.createbtn} onClick={()=>this.setState({create:true})}>Create Poll</button></div>\r\n                {this.state.create?\r\n                <div>\r\n                \r\n                <div className={classes.form}>\r\n                    <input type=\"text\" placeholder=\"Poll Name\" onChange={(event)=>this.setState({name:event.target.value})}></input>\r\n                    {candidates}\r\n                    <input type=\"text\" onChange={(event)=>this.setState({candidatename:event.target.value   })} value={this.state.candidatename} onKeyDown={this.add} placeholder=\"Candidate Name\"></input>\r\n                    <button onClick={this.startpole}>Submit</button>\r\n                    \r\n                </div>\r\n                </div>:\r\n                null   \r\n            }\r\n                <div className={classes.admincontent}>\r\n                    <div>\r\n                        <h3>Live Polls</h3>\r\n                       {poll}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default admin;","import React ,{Component} from 'react'\r\nimport classes from './main.module.css'\r\nimport axios from 'axios';\r\nimport Admin from './adminpage'\r\nimport {Link,Route,BrowserRouter} from 'react-router-dom'\r\n\r\nclass admin extends Component{\r\n    state={\r\n        login:true,\r\n        email:\"\",\r\n        password:\"\",\r\n        authenticated:false\r\n    }\r\n   \r\n    signup=()=>{\r\n       \r\n        this.setState({login:false,\r\n            email:\"\",\r\n            password:\"\"})\r\n    }\r\n    login=()=>{\r\n       \r\n        this.setState({login:true,\r\n            email:\"\",\r\n        password:\"\"})\r\n    }\r\n    logging=()=>{\r\n        const obj={\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        }\r\n        axios.post(\"http://localhost:8081/adminlogin\",obj).then((response)=>{\r\n            if(response.data)\r\n                {  this.props.adminlogin(this.state.email);\r\n                    }\r\n            else\r\n                alert(\"Wrong Credentials\");\r\n        })\r\n    }\r\n    signing=()=>{\r\n        const obj={\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            mypoles:{}\r\n        }\r\n        axios.post(\"http://localhost:8081/adminsignup\",obj).then((response)=>{\r\n                       if(response.data)\r\n            alert(\"Successfully Registered\")\r\n         else\r\n             alert(\"User name already exists\");\r\n        })\r\n    }\r\n    render(){\r\n        let mybtnl;\r\n        let mybtns;\r\n         if(this.state.login)\r\n           { mybtnl={backgroundColor:\"greenyellow\"}\r\n            mybtns={backgroundColor:\"white\"}\r\n            \r\n           }\r\n        else\r\n            {mybtns={backgroundColor:\"greenyellow\"}\r\n            mybtnl={backgroundColor:\"white\"}\r\n            }\r\n        return(\r\n            <div>\r\n            \r\n            <div className={classes.admincontainer}>\r\n               \r\n                <div className={classes.adminpic}></div>\r\n                \r\n                <div className={classes.adminform}>\r\n                    <div className={classes.logbtn}>\r\n                        <button style={mybtnl} onClick={this.login}>Log in</button>\r\n                            <button style={mybtns} onClick={this.signup}>Sign up</button>\r\n                        </div>\r\n                        {this.state.login?\r\n                        <div className={classes.form}>\r\n                            <input value={this.state.email} placeholder=\"Email\" type=\"email\" onChange={(event)=>this.setState({email:event.target.value})}></input>\r\n                            <input value={this.state.password}placeholder=\"Password\" onChange={(event)=>this.setState({password:event.target.value})} type=\"password\"></input>\r\n                            <button onClick={this.logging} >Login</button>\r\n                        </div>:\r\n                        <div className={classes.form}>\r\n                        <input value={this.state.email} placeholder=\"Email\"  onChange={(event)=>this.setState({email:event.target.value})} type=\"email\"></input>\r\n                        <input value={this.state.password }placeholder=\"Password\" onChange={(event)=>this.setState({password:event.target.value})} type=\"password\"></input>\r\n                        \r\n                        <button onClick={this.signing} >Sign up</button>\r\n                    </div>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n    \r\n                </div>\r\n\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default admin;","import React ,{Component} from 'react'\r\nimport classes from './main.module.css'\r\nimport axios from 'axios';\r\nclass admin extends Component{\r\n    state={\r\n        login:true,\r\n        email:\"\",\r\n        password:\"\",\r\n        authenticated:false\r\n    }\r\n   \r\n    signup=()=>{\r\n       \r\n        this.setState({login:false,\r\n            email:\"\",\r\n            password:\"\"})\r\n    }\r\n    login=()=>{\r\n       \r\n        this.setState({login:true,\r\n            email:\"\",\r\n        password:\"\"})\r\n    }\r\n    logging=()=>{\r\n        const obj={\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        }\r\n        axios.post(\"http://localhost:8081/candidatelogin\",obj).then((response)=>{\r\n            if(response.data)\r\n               this.props.voterlogin(this.state.email)\r\n            else\r\n                alert(\"Wrong Credentials\");\r\n        })\r\n    }\r\n    signing=()=>{\r\n        const obj={\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n           \r\n        }\r\n        axios.post(\"http://localhost:8081/candidatesignup\",obj).then((response)=>{\r\n            if(response.data)\r\n                alert(\"succesfully registered\")\r\n            else\r\n                alert(\"signup fail\")\r\n        })\r\n    }\r\n    render(){\r\n        let mybtnl;\r\n        let mybtns;\r\n         if(this.state.login)\r\n           { mybtnl={backgroundColor:\"greenyellow\"}\r\n            mybtns={backgroundColor:\"white\"}\r\n            \r\n           }\r\n        else\r\n            {mybtns={backgroundColor:\"greenyellow\"}\r\n            mybtnl={backgroundColor:\"white\"}\r\n            }\r\n        return(\r\n            <div className={classes.admincontainer}>\r\n               \r\n                <div className={classes.candidatepic}></div>\r\n                \r\n                <div className={classes.adminform}>\r\n                    <div className={classes.logbtn}>\r\n                        <button style={mybtnl} onClick={this.login}>Log in</button>\r\n                            <button style={mybtns} onClick={this.signup}>Sign up</button>\r\n                        </div>\r\n                        {this.state.login?\r\n                        <div className={classes.form}>\r\n                            <input value={this.state.email} placeholder=\"Email\" type=\"email\" onChange={(event)=>this.setState({email:event.target.value})}></input>\r\n                            <input value={this.state.password}placeholder=\"Password\" onChange={(event)=>this.setState({password:event.target.value})} type=\"password\"></input>\r\n                            <button onClick={this.logging} >Login</button>\r\n                        </div>:\r\n                        <div className={classes.form}>\r\n                        <input value={this.state.email} placeholder=\"Email\"  onChange={(event)=>this.setState({email:event.target.value})} type=\"email\"></input>\r\n                        <input value={this.state.password }placeholder=\"Password\" onChange={(event)=>this.setState({password:event.target.value})} type=\"password\"></input>\r\n                        \r\n                        <button onClick={this.signing} >Sign up</button>\r\n                    </div>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default admin;","import React from 'react'\r\nimport classes from './main.module.css'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\n\r\nconst result =(props)=>{\r\n   let p=props.name.map((obj)=>{\r\n       return <p onClick={props.onclick}>{obj.name}</p>\r\n   })\r\n\r\n   return <div className={classes.resultt}><h2>Click to Cast your Vote</h2>{p}</div>\r\n}\r\n\r\nexport default result;","import React, {Component} from 'react';\r\nimport classes from './main.module.css';\r\nimport Backdrop from './backdrop'\r\nimport T from './table'\r\nimport axios from 'axios';\r\nimport './table.css'\r\nimport Result from './vote'\r\nclass admin extends Component{\r\n    state={\r\n        email:this.props.username,\r\n        password:\"\",\r\n        create:false,\r\n        name:\"\",\r\n        candidates:[],\r\n        candidatename:\"\",\r\n        livepoles:[],\r\n        label:\"\",\r\n        result:false,\r\n        servercandidates:[]\r\n    }\r\n    \r\n     componentDidMount(){ \r\n        \r\n        axios.get(\"http://localhost:8081/vote\").then((res)=>{\r\n            console.log(res.data)\r\n            this.setState({\r\n                livepoles:res.data.map((obj)=>{\r\n                    return obj.name;\r\n                    \r\n                }),\r\n               \r\n        })\r\n    })\r\n\r\n        \r\n}\r\n\r\n    getresult=(event)=>{\r\n        let con=event.target.innerHTML\r\n        axios.get(\"http://localhost:8081/result/\"+event.target.innerHTML).then((res)=>{\r\n            console.log(res.data);\r\n            this.setState({\r\n                servercandidates:res.data,\r\n                result:true,\r\n                label:con\r\n            })\r\n        })\r\n        \r\n    }\r\n  \r\n    \r\n  \r\n\r\n    setoff=()=>{\r\n        this.setState({\r\n            result:false\r\n        })\r\n    }\r\n\r\n    vote=(event)=>{\r\n        let obj={\r\n                cand:event.target.innerHTML\r\n        }\r\n        axios.post(\"http://localhost:8081/cast\",obj).then((res)=>{\r\n            if(res.data)\r\n               { alert(\"You Voted for \"+obj.cand);\r\n                this.setState({\r\n                    result:false\r\n                })}\r\n                else\r\n                alert(\"Your votes is'nt Casted\");\r\n        })\r\n    }\r\n    render()\r\n    {\r\n        let res=null;\r\n        let back=null\r\n        if(this.state.result)\r\n          {  res=<Result onclick={this.vote} name={this.state.servercandidates}/>\r\n                back=<Backdrop onclick={this.setoff}/>\r\n        }   else{\r\n            back=null;\r\n            res=null;\r\n        }\r\n        let candidates=this.state.candidates.map((data)=>{\r\n            return (<p className={classes.mycan}> {data} </p>)\r\n        });\r\n        let poll=null\r\n        let ok\r\n        if(this.state.livepoles)\r\n    poll= <T onclick={this.getresult} name={this.state.livepoles}></T>\r\n        \r\n        return(\r\n            <div className={classes.adminbody}>\r\n                    {res}\r\n                    {back}\r\n                 <div >\r\n                <div className={classes.adminheader}>Welcome, {this.state.email}</div>\r\n               \r\n                <div className={classes.admincontent}>\r\n                    <div>\r\n                        <h3>Live Polls</h3>\r\n                       {poll}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default admin;","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport classes from './main.module.css'\nimport Home from './home';\nimport Backdrop from './backdrop'\nimport Admin from './adminlogin'\nimport Candidate from './candidatelogin'\nimport Adminpage from './adminpage'\nimport {BrowserRouter} from 'react-router-dom'\nimport Voterpage from './voter';\nclass App extends Component{\n  state={\n    backdrop:false,\n    adminlogin:false,\n    candidatelogin:false,\n    username:\"\",\n    password:\"\",\n    adminauth:false,\n    voterauth:false,\n    home:true\n  }\n  backdrop=false\n  voterlogin=(obj)=>{\n    this.setState({\n      adminauth:false,\n      username:obj,\n     \n      voterauth:true,\n      backdrop:false,\n      home:false\n    })\n  }\n  toggleBackdrop=()=>{\n      this.setState({backdrop:false\n                      ,adminlogin:false,\n                    candidatelogin:false})\n      \n  }\n  adminlogin=()=>{\n    this.setState({adminlogin:true,\n                    candidatelogin:false,\n                  backdrop:true\n                  })\n  }\n  candidatelogin=()=>{\n    this.setState({candidatelogin:true,\n                  adminlogin:false,\n                  backdrop:true\n                  })\n  }\n adminauth=(obj)=>{\n   let ka=obj\n    this.setState({\n      adminauth:true,\n      username:ka,\n      password:obj.password,\n      backdrop:false,\n      home:false\n    })\n }\n  render()\n  { ///////////////////////BACKDROP\n    if(this.state.backdrop)\n    this.backdrop=<Backdrop onclick={this.toggleBackdrop}/>\n    else\n    this.backdrop=null;\n    /////////////////Admin\n    \n    let admin=null;\n      if(this.state.adminlogin)\n        admin=<Admin  adminlogin={this.adminauth}/>\n        \n      \n\n      if(this.state.candidatelogin)\n        admin=<Candidate voterlogin={this.voterlogin}/>\n        \n    if(this.state.adminauth)\n     admin= <Adminpage username={this.state.username}/>\n    if(this.state.voterauth)\n      admin=<Voterpage username={this.state.username}/>\n    return(\n     \n      <div className={classes.app}>\n\n           {this.backdrop}\n          {admin}\n          {this.state.home?\n          <Home candidatelogin={this.candidatelogin} adminlogin={this.adminlogin}/>:\n          null}\n             \n             \n      </div>\n    \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}